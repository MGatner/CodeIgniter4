name: Deploy

on:
  release:
    types: [published]

jobs:
  framework:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          path: source

      - name: Checkout target
        uses: actions/checkout@v2
        with:
          repository: mgatner/framework
          token: ${{ secrets.ACCESS_TOKEN }}
          path: framework

      - name: Chmod
        run: chmod +x ./source/.github/scripts/deploy-framework

      - name: Deploy
        run: ./source/.github/scripts/deploy-framework ${GITHUB_WORKSPACE}/source ${GITHUB_WORKSPACE}/framework ${GITHUB_REF##*/}

      - name: Release
        uses: actions/github-script@0.8.0
        with:
          github-token: ${{secrets.ACCESS_TOKEN}}
          script: |
            const release = await github.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            github.repos.createRelease({
              owner: context.repo.owner,
              repo: 'framework',
              tag_name: release.data.tag_name,
              name: release.data.name,
              body: release.data.body
            })

  appstarter:
    runs-on: ubuntu-latest

    steps:
      - name: Release message
        id: message
        uses: actions/github-script@0.8.0
        with:
          result-encoding: string
          script: |
            const release = await github.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            console.log(release)

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          path: source

      - name: Checkout target
        uses: actions/checkout@v2
        with:
          repository: mgatner/appstarter
          token: ${{ secrets.ACCESS_TOKEN }}
          path: appstarter

      - name: Chmod
        run: chmod +x ./source/.github/scripts/deploy-appstarter

      - name: Merge
        run: ./source/.github/scripts/deploy-appstarter ${GITHUB_WORKSPACE}/source ${GITHUB_WORKSPACE}/appstarter ${GITHUB_REF##*/}
